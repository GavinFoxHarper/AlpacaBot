{
  "permissions": {
    "allow": [
      "Bash(if [ -f \".env\" ])",
      "Bash(then echo \".env file exists\")",
      "Bash(else echo \".env file not found\")",
      "Bash(fi)",
      "Bash(python:*)",
      "Bash(timeout:*)",
      "Read(/C:\\Users\\jclif\\Downloads/**)",
      "Bash(cat:*)",
      "Bash(del validate_configurations.py test_config_integration.py)",
      "Bash(dir:*)",
      "Bash(if [ -d \"logs\" ])",
      "Bash(then echo \"logs directory exists\")",
      "Bash(else echo \"logs directory not found\")",
      "Bash(if [ -d \"logs/training\" ])",
      "Bash(then echo \"logs/training exists\")",
      "Bash(else echo \"logs/training not found - creating it\")",
      "Bash(mkdir:*)",
      "Bash(if [ -d \"models\" ])",
      "Bash(then echo \"models directory exists\")",
      "Bash(else echo \"models directory not found\")",
      "Bash(if [ -d \"models/q_learning_models\" ])",
      "Bash(then echo \"q_learning_models exists\")",
      "Bash(else echo \"q_learning_models not found - creating it\")",
      "Bash(pip install:*)",
      "Bash(pip show:*)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Bash(fsutil volume diskfree:*)",
      "Read(C:\\Users\\jclif\\AlpacaBot\\config/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Bash(wmic:*)",
      "Bash(pip cache:*)",
      "Bash(git add:*)",
      "Bash(del nul)",
      "Bash(rm:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Read(C:\\Users\\jclif\\AlpacaBot\\trading/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot\\core/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot/**)",
      "Read(C:\\Users\\jclif\\AlpacaBot\\config/**)",
      "Read(C:\\Users\\jclif\\Downloads/**)",
      "Bash(if [ -f \"venv/Scripts/activate.bat\" ])",
      "Bash(then echo \"Virtual env exists\")",
      "Bash(else echo \"No virtual env found\")",
      "Bash(move:*)",
      "Bash(git rm:*)",
      "Bash(cmd /c:*)",
      "Bash(if [ -f \"start_laef_interactive.py\" ])",
      "Bash(then echo \"start_laef_interactive.py exists\")",
      "Bash(else echo \"start_laef_interactive.py not found\")",
      "Bash(if [ -f \"logs/training/predictions.db\" ])",
      "Bash(then echo \"predictions.db exists\")",
      "Bash(else echo \"predictions.db not found\")",
      "Bash(find:*)",
      "Bash(create_analysis_package.bat)",
      "Bash(powershell:*)",
      "Bash(if exist AlpacaBot_Analysis_Package rmdir /s /q AlpacaBot_Analysis_Package)",
      "Bash(if exist nul del nul)",
      "Bash(git reset:*)"
    ],
    "deny": [],
    "ask": []
  }
}